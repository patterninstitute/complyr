% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compliance_test.R
\name{create_compliance_test}
\alias{create_compliance_test}
\title{Create a compliance test}
\usage{
create_compliance_test(desc, code, .f)
}
\arguments{
\item{desc}{Test description.}

\item{code}{Test code.}

\item{.f}{A gold standard complier function, i.e. a function that passes
the test. This is used as default argument value for the returned function
(see Value).}
}
\value{
A \link{function} that runs the test. This function takes one single
argument, a candidate complier function.
}
\description{
A compliance test is a unit test whose expectations are defined around
a complier function.
}
\examples{
# Create a compliance test for a function that implements addition of two
# numbers.

# Use .f to specify a reference complier function.
test_add_two_numbers <-
  create_compliance_test("add_two_numbers", code = {
    testthat::expect_identical(.f(2, 3), 5)
    testthat::expect_identical(.f(-2, 3), 1)
  }, .f = \(x, y) x + y)

# By default `.f` will take the value of `.f` when the test was created.
test_add_two_numbers()

# Different but equivalent implementation also complies.
test_add_two_numbers(.f = \(x, y) y + x)

try(test_add_two_numbers(.f = \(x, y) x + y + 0.1))

}
